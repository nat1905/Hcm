// <auto-generated />
using System;
using Hcm.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hcm.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211122170200_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19");

            modelBuilder.Entity("Hcm.Database.Models.Assignment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnName("department_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnName("employee_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End")
                        .HasColumnName("end_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnName("job_title")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<DateTime?>("Start")
                        .IsRequired()
                        .HasColumnName("start_date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("assignments","dbo");
                });

            modelBuilder.Entity("Hcm.Database.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("departments","dbo");
                });

            modelBuilder.Entity("Hcm.Database.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("AddressLine")
                        .HasColumnName("address_line")
                        .HasColumnType("TEXT")
                        .HasMaxLength(512);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.Property<string>("PostCode")
                        .HasColumnName("post_code")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("IX_employees_email");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("IX_employees_phone");

                    b.HasIndex("UserId");

                    b.ToTable("employees","dbo");
                });

            modelBuilder.Entity("Hcm.Database.Models.Sallary", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("AssignmentId")
                        .IsRequired()
                        .HasColumnName("assignment_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnName("currency")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("salaries","dbo");
                });

            modelBuilder.Entity("Hcm.Database.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.Property<int>("Role")
                        .HasColumnName("role")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(16);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("users","dbo");

                    b.HasData(
                        new
                        {
                            Id = "44383997-a120-41c4-a540-7bc28f2bcab3",
                            Email = "administrator@hcm.com",
                            Password = "02989d0805b74512a49a818915c67070",
                            Phone = "+359878121212121",
                            Role = 1,
                            Username = "administrator@hcm.com"
                        });
                });

            modelBuilder.Entity("Hcm.Database.Models.Assignment", b =>
                {
                    b.HasOne("Hcm.Database.Models.Department", "Department")
                        .WithMany("Assignments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hcm.Database.Models.Employee", "Employee")
                        .WithMany("Assignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hcm.Database.Models.Employee", b =>
                {
                    b.HasOne("Hcm.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hcm.Database.Models.Sallary", b =>
                {
                    b.HasOne("Hcm.Database.Models.Assignment", "Assignment")
                        .WithMany("Sallaries")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
